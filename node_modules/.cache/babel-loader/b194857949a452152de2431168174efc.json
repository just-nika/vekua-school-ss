{"ast":null,"code":"var _jsxFileName = \"/Users/nikolozlobzhanidze/Desktop/nika/nika web/course 2/react/vekuas-school/src/screens/texteditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, Fragment } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Button from '@material-ui/core/Button';\nimport { firestore } from '../firebase/firebase.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction init() {\n  //// Initialize Firebase.\n  var firepadRef = getExampleRef(); // TODO: Replace above line with:\n  // var firepadRef = new Firebase('<YOUR FIREBASE URL>');\n  //// Create CodeMirror (with lineWrapping on).\n\n  var codeMirror = CodeMirror(document.getElementById('firepad-container'), {\n    lineWrapping: true\n  }); //// Create Firepad (with rich text toolbar and shortcuts enabled).\n\n  var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror, {\n    richTextToolbar: true,\n    richTextShortcuts: true\n  }); //// Initialize contents.\n\n  firepad.on('ready', function () {\n    if (firepad.isHistoryEmpty()) {\n      firepad.setHtml('Supports rich text!!<br/>');\n    }\n  }); // An example of a complex custom entity.\n\n  firepad.registerEntity('checkbox', {\n    render: function (info, entityHandler) {\n      var inputElement = document.createElement('input');\n      inputElement.setAttribute('type', 'checkbox');\n\n      if (info.checked) {\n        inputElement.checked = 'checked';\n      }\n\n      inputElement.addEventListener('click', function () {\n        entityHandler.replace({\n          checked: this.checked\n        });\n      });\n      return inputElement;\n    }.bind(this),\n    fromElement: function (element) {\n      var info = {};\n\n      if (element.hasAttribute('checked')) {\n        info.checked = true;\n      }\n\n      return info;\n    },\n    update: function (info, element) {\n      if (info.checked) {\n        element.checked = 'checked';\n      } else {\n        element.checked = null;\n      }\n    },\n    export: function (info) {\n      var inputElement = document.createElement('checkbox');\n\n      if (info.checked) {\n        inputElement.setAttribute('checked', true);\n      }\n\n      return inputElement;\n    }\n  });\n} // Helper to get hash from end of URL or generate a random one.\n\n\nfunction getExampleRef() {\n  var ref = new Firebase('https://firepad.firebaseio-demo.com');\n  var hash = window.location.hash.replace(/#/g, '');\n\n  if (hash) {\n    ref = ref.child(hash);\n  } else {\n    ref = ref.push(); // generate unique location.\n\n    window.location = window.location + '#' + ref.key(); // add it as a hash to the URL.\n  }\n\n  if (typeof console !== 'undefined') console.log('Firebase data: ', ref.toString());\n  return ref;\n}\n\ninit();\n\nfunction TextEditor() {\n  _s();\n\n  const [pupils, setPupils] = useState([]);\n  useEffect(() => {\n    getLaw();\n  }, []);\n\n  const addLaw = async () => {\n    const law = document.getElementById(\"law\").value;\n    const surname = document.getElementById(\"add_surname\").value; // ამატებს ახალ დოკუმენტს ავტომატურად დაგენერირებული ID-ით\n\n    await firestore.collection(\"info\").add({\n      law: law\n    }).then(() => {\n      document.getElementById(\"law\").value = \"\";\n      getLaw();\n    });\n  };\n\n  const getLaw = async () => {\n    const data = await firestore.collection(\"pupils\").get();\n    setPupils(data.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"firepad-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        onReady: editor => {\n          console.log('Editor is ready to use!', editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          console.log({\n            event,\n            editor,\n            data\n          });\n        },\n        onBlur: (event, editor) => {\n          console.log('Blur.', editor);\n        },\n        onFocus: (event, editor) => {\n          console.log('Focus.', editor);\n        },\n        id: \"laws\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        component: \"span\",\n        onClick: addLaw(),\n        children: \"\\u10D0\\u10E2\\u10D5\\u10D8\\u10E0\\u10D7\\u10D5\\u10D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextEditor, \"G5ltClgnePeN9nXKGCYRhDsSjq0=\");\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/nikolozlobzhanidze/Desktop/nika/nika web/course 2/react/vekuas-school/src/screens/texteditor.js"],"names":["React","Component","useState","useEffect","Fragment","CKEditor","ClassicEditor","Button","firestore","init","firepadRef","getExampleRef","codeMirror","CodeMirror","document","getElementById","lineWrapping","firepad","Firepad","fromCodeMirror","richTextToolbar","richTextShortcuts","on","isHistoryEmpty","setHtml","registerEntity","render","info","entityHandler","inputElement","createElement","setAttribute","checked","addEventListener","replace","bind","fromElement","element","hasAttribute","update","export","ref","Firebase","hash","window","location","child","push","key","console","log","toString","TextEditor","pupils","setPupils","getLaw","addLaw","law","value","surname","collection","add","then","data","get","docs","map","doc","id","editor","event","getData"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, Fragment } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Button from '@material-ui/core/Button';\nimport {\n    firestore\n} from '../firebase/firebase.config'\n\nfunction init() {\n    //// Initialize Firebase.\n    var firepadRef = getExampleRef();\n    // TODO: Replace above line with:\n    // var firepadRef = new Firebase('<YOUR FIREBASE URL>');\n    //// Create CodeMirror (with lineWrapping on).\n    var codeMirror = CodeMirror(document.getElementById('firepad-container'), { lineWrapping: true });\n    //// Create Firepad (with rich text toolbar and shortcuts enabled).\n    var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror,\n        { richTextToolbar: true, richTextShortcuts: true });\n    //// Initialize contents.\n    firepad.on('ready', function() {\n      if (firepad.isHistoryEmpty()) {\n        firepad.setHtml('Supports rich text!!<br/>');\n         \n      }\n    });\n    // An example of a complex custom entity.\n    firepad.registerEntity('checkbox', {\n      render: function (info, entityHandler) {\n        var inputElement = document.createElement('input');\n        inputElement.setAttribute('type', 'checkbox');\n        if(info.checked) {\n          inputElement.checked = 'checked';\n        }\n        inputElement.addEventListener('click', function () {\n          entityHandler.replace({checked:this.checked});\n        });\n        return inputElement;\n      }.bind(this),\n      fromElement: function (element) {\n        var info = {};\n        if(element.hasAttribute('checked')) {\n          info.checked = true;\n        }\n        return info;\n      },\n      update: function (info, element) {\n        if (info.checked) {\n          element.checked = 'checked';\n        } else {\n          element.checked = null;\n        }\n      },\n      export: function (info) {\n        var inputElement = document.createElement('checkbox');\n        if(info.checked) {\n          inputElement.setAttribute('checked', true);\n        }\n        return inputElement;\n      }\n    });\n  }\n  // Helper to get hash from end of URL or generate a random one.\n  function getExampleRef() {\n    var ref = new Firebase('https://firepad.firebaseio-demo.com');\n    var hash = window.location.hash.replace(/#/g, '');\n    if (hash) {\n      ref = ref.child(hash);\n    } else {\n      ref = ref.push(); // generate unique location.\n      window.location = window.location + '#' + ref.key(); // add it as a hash to the URL.\n    }\n    if (typeof console !== 'undefined')\n      console.log('Firebase data: ', ref.toString());\n    return ref;\n  }\n  init();\n\nfunction TextEditor() {\n    const [pupils, setPupils] = useState([]);\n\n    useEffect(() => {\n        getLaw();\n    }, [])\n\n    const addLaw = async () => {\n        const law = document.getElementById(\"law\").value;\n        const surname = document.getElementById(\"add_surname\").value;\n        // ამატებს ახალ დოკუმენტს ავტომატურად დაგენერირებული ID-ით\n        await firestore.collection(\"info\").add({\n          law: law\n        }).then(() => {\n          document.getElementById(\"law\").value = \"\";\n          getLaw()\n        })\n    }\n\n    const getLaw = async () => {\n        const data = await firestore.collection(\"pupils\").get();\n        setPupils(data.docs.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        })))\n    }\n\n    return (\n        <div className=\"editor\">\n            <div id=\"firepad-container\"></div>\n            <Fragment>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    onReady={ editor => {\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ ( event, editor ) => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ ( event, editor ) => {\n                        console.log( 'Focus.', editor );\n                    } }\n                    id=\"laws\"\n                />\n                <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={addLaw()}>ატვირთვა</Button>\n            </Fragment>\n        </div>\n    )\n}\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}